/*
 * Copyright (c) 2008, Rickard Ã–berg. All Rights Reserved.
 * Copyright (c) 2008, Sonny Gill. All Rights Reserved.
 * Copyright (c) 2008, Niclas Hedhman. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package org.qi4j.library.swing.visualizer;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import org.qi4j.injection.scope.Structure;
import org.qi4j.library.swing.visualizer.detailPanel.DetailPanel;
import org.qi4j.library.swing.visualizer.model.ApplicationDetailDescriptor;
import static org.qi4j.library.swing.visualizer.model.ApplicationDetailDescriptorBuilder.createApplicationDetailDescriptor;
import org.qi4j.library.swing.visualizer.overview.OverviewPanel;
import org.qi4j.object.ObjectBuilder;
import org.qi4j.object.ObjectBuilderFactory;
import org.qi4j.spi.structure.ApplicationSPI;
import org.qi4j.structure.Application;

/**
 * TODO
 *
 * @author Sonny Gill
 * @author edward.yakop@gmail.com
 * @since 0.4
 */
public class ApplicationGraph
{
    // TODO: Revert back to pre show( Application )
    @Structure private Application application;

    private final ObjectBuilderFactory obf;

    private OverviewPanel overviewPanel;
    private DetailPanel detailPanel;

    private JPanel form;
    private JFrame frame;

    public ApplicationGraph( @Structure ObjectBuilderFactory anOBF )
    {
        obf = anOBF;
        $$$setupUI$$$();
    }

    public final void show()
    {
        ApplicationSPI applicationSPI = (ApplicationSPI) application;
        ApplicationDetailDescriptor appDescriptor =
            createApplicationDetailDescriptor( applicationSPI );

        if( frame == null )
        {
            String applicationName = application.name();
            frame = new JFrame( "Application [" + applicationName + "] Graph" );
            frame.add( form );

            frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );
            frame.pack();
            frame.setVisible( true );
        }

        // Default display the application
        overviewPanel.displayApplication( appDescriptor );
        detailPanel.onApplicationSelected( appDescriptor );
    }

    public final void hide()
    {
        frame.setVisible( false );
    }

    private void createUIComponents()
    {
        // Detail panel
        detailPanel = obf.newObject( DetailPanel.class );

        // Overview panel
        ObjectBuilder<OverviewPanel> overviewPanelBuilder = obf.newObjectBuilder( OverviewPanel.class );
        overviewPanelBuilder.use( detailPanel );
        overviewPanel = overviewPanelBuilder.newInstance();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        createUIComponents();
        form = new JPanel();
        form.setLayout( new FormLayout( "fill:p:grow", "fill:p:grow" ) );
        final JSplitPane splitPane1 = new JSplitPane();
        splitPane1.setOneTouchExpandable( true );
        splitPane1.setOrientation( 0 );
        CellConstraints cc = new CellConstraints();
        form.add( splitPane1, cc.xy( 1, 1 ) );
        splitPane1.setLeftComponent( overviewPanel.$$$getRootComponent$$$() );
        splitPane1.setRightComponent( detailPanel.$$$getRootComponent$$$() );
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$()
    {
        return form;
    }
}

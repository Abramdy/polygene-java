/*  Copyright 2008 Edward Yakop.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
* implied.
*
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package org.qi4j.library.swing.visualizer.detailPanel.internal.form.object;

import com.jgoodies.forms.factories.DefaultComponentFactory;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import java.lang.reflect.Field;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.qi4j.api.composite.Composite;
import org.qi4j.library.swing.visualizer.model.descriptor.InjectedFieldDetailDescriptor;
import org.qi4j.library.swing.visualizer.model.descriptor.MixinDetailDescriptor;
import org.qi4j.library.swing.visualizer.model.descriptor.ObjectDetailDescriptor;
import org.qi4j.spi.composite.DependencyDescriptor;
import org.qi4j.spi.mixin.MixinDescriptor;

/**
 * @author edward.yakop@gmail.com
 * @since 0.5
 */
public final class InjectedFieldDescriptorForm
{
    private JComponent fieldSeparator;
    private JTextField fieldName;

    private JComponent dependencySeparator;
    private DependencyDescriptorForm dependencyForm;

    private JPanel fieldForm;

    public InjectedFieldDescriptorForm()
    {
        $$$setupUI$$$();
    }

    public final void updateModel( InjectedFieldDetailDescriptor aDescriptor )
    {
        populateFieldRelatedComponents( aDescriptor );
        populateDependencyForm( aDescriptor );
    }

    private void populateFieldRelatedComponents( InjectedFieldDetailDescriptor aDescriptor )
    {
        String fieldNameStr = null;

        if( aDescriptor != null )
        {
            Field field = aDescriptor.descriptor().field();
            fieldNameStr = field.getName();
        }

        fieldName.setText( fieldNameStr );
    }

    private String memberOf( InjectedFieldDetailDescriptor aDescriptor )
    {
        if( aDescriptor == null )
        {
            return null;
        }

        MixinDetailDescriptor mixin = aDescriptor.mixin();
        if( mixin != null )
        {
            MixinDescriptor mixinDescriptor = mixin.descriptor();
            Class mixinClass = mixinDescriptor.mixinClass();
            return mixinClass.getName();
        }
        else
        {
            ObjectDetailDescriptor object = aDescriptor.object();
            Class<?> objectClass = object.descriptor().type();
            return objectClass.getName();
        }
    }

    private void populateDependencyForm( InjectedFieldDetailDescriptor aDescriptor )
    {
        DependencyDescriptor dependencyDescriptor = null;
        if( aDescriptor != null )
        {
            dependencyDescriptor = aDescriptor.descriptor().dependency();
        }
        dependencyForm.updateModel( dependencyDescriptor );
    }

    private void createUIComponents()
    {
        DefaultComponentFactory cmpFactory = DefaultComponentFactory.getInstance();

        // TODO: Localization
        fieldSeparator = cmpFactory.createSeparator( "Injected field" );
        dependencySeparator = cmpFactory.createSeparator( "Dependency" );
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        createUIComponents();
        fieldForm = new JPanel();
        fieldForm.setLayout( new FormLayout( "fill:max(d;4px):noGrow,fill:p:noGrow,left:4dlu:noGrow,fill:max(p;75dlu):noGrow,fill:max(d;4px):noGrow,left:285px:grow,fill:max(d;4px):noGrow", "center:4px:noGrow,center:p:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:5dlu:noGrow,center:p:noGrow,center:4dlu:noGrow,center:p:noGrow,top:4px:noGrow" ) );
        ( (FormLayout) fieldForm.getLayout() ).setRowGroups( new int[][]{ new int[]{ 1, 9 }, new int[]{ 3, 7 }, new int[]{ 2, 6 } } );
        ( (FormLayout) fieldForm.getLayout() ).setColumnGroups( new int[][]{ new int[]{ 3, 5 }, new int[]{ 1, 7 } } );
        CellConstraints cc = new CellConstraints();
        fieldForm.add( fieldSeparator, cc.xyw( 2, 2, 5 ) );
        final JLabel label1 = new JLabel();
        label1.setText( "Field Name" );
        fieldForm.add( label1, cc.xy( 2, 4 ) );
        dependencyForm = new DependencyDescriptorForm();
        fieldForm.add( dependencyForm.$$$getRootComponent$$$(), cc.xyw( 2, 8, 5 ) );
        fieldName = new JTextField();
        fieldName.setEditable( false );
        fieldForm.add( fieldName, cc.xy( 4, 4, CellConstraints.FILL, CellConstraints.DEFAULT ) );
        fieldForm.add( dependencySeparator, cc.xyw( 2, 6, 5 ) );
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$()
    {
        return fieldForm;
    }
}

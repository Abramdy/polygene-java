/*  Copyright 2008 Edward Yakop.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
* implied.
*
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package org.qi4j.library.swing.visualizer.detailPanel.internal.form.entity;

import com.jgoodies.forms.factories.DefaultComponentFactory;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.qi4j.injection.scope.Structure;
import org.qi4j.library.swing.visualizer.model.EntityDetailDescriptor;
import org.qi4j.object.ObjectBuilderFactory;
import org.qi4j.spi.entity.EntityDescriptor;
import org.qi4j.spi.entity.EntityType;

/**
 * @author edward.yakop@gmail.com
 * @see org.qi4j.library.swing.visualizer.model.CompositeDetailDescriptor
 * @since 0.5
 */
public final class EntityDescriptorForm
{
    private JComponent entitySeparator;
    private JTextField entityClassName;
    private JTextField entityURI;
    private JTextField entityVisibility;
    private JCheckBox isEntityQueryAble;
    private JTextField entityVersion;

    private JPanel entityPanel;
    private EntityDetailForm entityDetail;
    private final ObjectBuilderFactory obf;

    public EntityDescriptorForm( @Structure ObjectBuilderFactory anOBF )
    {
        obf = anOBF;
        $$$setupUI$$$();
    }

    public final void updateModel( EntityDetailDescriptor aDescriptor )
    {
        String className = null;
        String uri = null;
        String visibility = null;
        boolean isQueryable = false;
        String version = null;

        if( aDescriptor != null )
        {
            // Basic properties
            EntityDescriptor descriptor = aDescriptor.descriptor();
            className = descriptor.type().getName();
            uri = descriptor.toURI();
            visibility = descriptor.visibility().toString();

            EntityType entityType = descriptor.entityType();
            isQueryable = entityType.queryable();
            version = Long.toString( entityType.version() );
        }


        entityClassName.setText( className );
        entityURI.setText( uri );
        entityVisibility.setText( visibility );
        isEntityQueryAble.setSelected( isQueryable );
        entityVersion.setText( version );

        // Update entity detail
        entityDetail.updateModel( aDescriptor );
    }

    private void createUIComponents()
    {
        DefaultComponentFactory cmpFactory = DefaultComponentFactory.getInstance();
        // TODO: Localization
        entitySeparator = cmpFactory.createSeparator( "Entity" );

        entityDetail = obf.newObject( EntityDetailForm.class );
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        createUIComponents();
        entityPanel = new JPanel();
        entityPanel.setLayout( new FormLayout( "left:4px:noGrow,left:p:noGrow,left:4dlu:noGrow,fill:max(p;75dlu):noGrow,left:4dlu:noGrow,left:d:grow,left:4px:noGrow", "top:4px:noGrow,center:p:noGrow,top:4dlu:noGrow,center:p:noGrow,top:4dlu:noGrow,center:p:noGrow,top:4dlu:noGrow,center:p:noGrow,top:4dlu:noGrow,center:p:noGrow,top:4dlu:noGrow,center:p:noGrow,top:4dlu:noGrow,fill:p:grow,top:4px:noGrow" ) );
        ( (FormLayout) entityPanel.getLayout() ).setRowGroups( new int[][]{ new int[]{ 1, 15 }, new int[]{ 4, 6, 8, 10, 12 }, new int[]{ 5, 7, 9, 11, 13 } } );
        ( (FormLayout) entityPanel.getLayout() ).setColumnGroups( new int[][]{ new int[]{ 1, 7 }, new int[]{ 3, 5 } } );
        CellConstraints cc = new CellConstraints();
        entityPanel.add( entitySeparator, cc.xyw( 2, 2, 5 ) );
        final JLabel label1 = new JLabel();
        label1.setText( "Class name" );
        entityPanel.add( label1, cc.xy( 2, 4 ) );
        final JLabel label2 = new JLabel();
        label2.setText( "URI" );
        entityPanel.add( label2, cc.xy( 2, 6 ) );
        final JLabel label3 = new JLabel();
        label3.setText( "Visibility" );
        entityPanel.add( label3, cc.xy( 2, 8 ) );
        entityClassName = new JTextField();
        entityClassName.setEditable( false );
        entityPanel.add( entityClassName, cc.xy( 4, 4 ) );
        entityURI = new JTextField();
        entityURI.setEditable( false );
        entityPanel.add( entityURI, cc.xy( 4, 6 ) );
        entityVisibility = new JTextField();
        entityVisibility.setEditable( false );
        entityPanel.add( entityVisibility, cc.xy( 4, 8 ) );
        final JLabel label4 = new JLabel();
        label4.setText( "Queryable" );
        entityPanel.add( label4, cc.xy( 2, 10 ) );
        final JLabel label5 = new JLabel();
        label5.setText( "Version" );
        entityPanel.add( label5, cc.xy( 2, 12 ) );
        isEntityQueryAble = new JCheckBox();
        isEntityQueryAble.setEnabled( false );
        isEntityQueryAble.setText( "" );
        entityPanel.add( isEntityQueryAble, cc.xy( 4, 10 ) );
        entityVersion = new JTextField();
        entityVersion.setEditable( false );
        entityPanel.add( entityVersion, cc.xy( 4, 12, CellConstraints.FILL, CellConstraints.DEFAULT ) );
        entityPanel.add( entityDetail.$$$getRootComponent$$$(), cc.xyw( 2, 14, 5 ) );
        label1.setLabelFor( entityClassName );
        label2.setLabelFor( entityURI );
        label3.setLabelFor( entityVisibility );
        label5.setLabelFor( entityVersion );
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$()
    {
        return entityPanel;
    }
}
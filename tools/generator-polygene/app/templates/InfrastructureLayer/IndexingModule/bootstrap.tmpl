<%#
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *
-%>
package <%= polygene.packageName %>.bootstrap.infrastructure;

import org.apache.polygene.api.common.Visibility;
import org.apache.polygene.bootstrap.AssemblyException;
import org.apache.polygene.bootstrap.LayerAssembly;
import org.apache.polygene.bootstrap.ModuleAssembly;
import org.apache.polygene.bootstrap.layered.ModuleAssembler;
import org.apache.polygene.index.<%- polygene.indexing.toLowerCase() %>.assembly.<%- polygene.indexing %>IndexingAssembler;
<%
if( polygene.indexing === 'SQL' ) {
%>import org.apache.polygene.library.sql.assembly.DataSourceAssembler;
import org.apache.polygene.library.sql.dbcp.DBCPDataSourceServiceAssembler;
<%
}
%>
public class <%- polygene.indexing %>IndexingModule
    implements ModuleAssembler
{
    public static final String NAME = "<%- polygene.indexing %> Indexing Module";
    private final ModuleAssembly configModule;

    <%- polygene.indexing %>IndexingModule( ModuleAssembly configModule )
    {
        this.configModule = configModule;
    }

    @Override
    public ModuleAssembly assemble( LayerAssembly layer, ModuleAssembly module )
        throws AssemblyException
    {
<% if( polygene.indexing === 'SQL' ) {
%>        // DataSourceService
        new DBCPDataSourceServiceAssembler()
            .identifiedBy( "postgres-index-datasource-service" )
            .visibleIn( Visibility.module )
            .withConfig( configModule, Visibility.application )
            .assemble( module );

        // DataSource (Only Postgresql was supported at the time of generation code was written.)
        new DataSourceAssembler()
            .withDataSourceServiceIdentity( "postgres-index-datasource-service" )
            .identifiedBy( "ds-index-postgresql" )
            .visibleIn( Visibility.module )
            .withCircuitBreaker()
            .assemble( module );
<%
}
%>        new <%- polygene.indexing %>IndexingAssembler()
            .visibleIn( Visibility.application )
            .identifiedBy( "indexing-<%- polygene.indexing.toLowerCase() %>" )
            .withConfig( configModule, Visibility.application )
            .assemble( module );
        return module;
    }
}


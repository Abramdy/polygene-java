<%#
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *
-%>
package <%= packageName %>.bootstrap.connectivity;

import <%= packageName %>.rest.security.SimpleEnroler;
import <%= packageName %>.rest.security.SimpleVerifier;
import org.apache.zest.bootstrap.AssemblyException;
import org.apache.zest.bootstrap.LayerAssembly;
import org.apache.zest.bootstrap.ModuleAssembly;
import org.apache.zest.bootstrap.layered.ModuleAssembler;
import org.apache.zest.library.restlet.assembly.RestletCrudConnectivityAssembler;
import org.apache.zest.library.restlet.resource.EntryPoint;
<% if( hasFeature('sample (heroes) web application') ) { %>
import <%= packageName %>.model.heroes.Hero;
<% } -%>

public class RestApiModule
    implements ModuleAssembler
{
    public static String NAME;

    @Override
    public ModuleAssembly assemble( LayerAssembly layer, ModuleAssembly module )
        throws AssemblyException
    {
        module.withDefaultUnitOfWorkFactory();

        module.objects( SimpleVerifier.class, SimpleEnroler.class);

        new RestletCrudConnectivityAssembler().assemble( module );
        module.values( EntryPoint.class );
<% if( hasFeature('sample (heroes) web application') ) { -%>
        module.values( Hero.class );
        module.services( Hero.class );
<% } else { -%>
        module.values( /* add value types */   );
        module.services(  /* add services */  );
<% } -%>
        return module;
    }
}
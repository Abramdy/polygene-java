repositories {
  mavenRepo name: 'restlet-repo', urls: 'http://maven.restlet.org'
  mavenRepo name: 'aduna-repo', urls: "http://repo.aduna-software.org/maven2/releases/"
}

dependencies {
  compile(project(":core:api"))
  compile(project(":core:bootstrap"))
  compile(project(":libraries:eventsourcing"))
  compile(libraries.slf4j_api)

  compile("org.restlet.jee:org.restlet:$restletVersion")
  compile("org.restlet.jee:org.restlet.ext.atom:$restletVersion")
  compile("org.restlet.jee:org.restlet.ext.servlet:$restletVersion")
  compile("org.restlet.jee:org.restlet.ext.slf4j:$restletVersion")
  compile("org.restlet.jee:org.restlet.ext.xml:$restletVersion")

  testCompile(libraries.junit)
  testCompile(project(":core:testsupport"))
  testRuntime(project(":core:spi"))
  testRuntime(project(":core:runtime"))
  testRuntime(libraries.asm)
  testRuntime(libraries.asm_commons)
  testRuntime(libraries.slf4j_simple)
}

jar {
  manifest {
    description = "Qi4j Auth Library provides authentication and authorization framework at method level."
    name = "Qi4j Library - Auth"
    instruction 'Export-Package', symbolicName + ';version=' + version
    instruction 'Private-Package', symbolicName + '.internal'
//    instruction 'Import-Package', symbolicName + ';version="[' + version +',2.0)"',
//				'javax.security.auth',
//                'org.qi4j.api.common;version="['+version+',2)"',
//                'org.qi4j.api.composite;version="['+version+',2)"',
//                'org.qi4j.api.concern;version="['+version+',2)"',
//                'org.qi4j.api.entity;version="['+version+',2)"',
//                'org.qi4j.api.entity.association;version="['+version+',2)"',
//                'org.qi4j.api.injection;version="['+version+',2)"',
//                'org.qi4j.api.injection.scope;version="['+version+',2)"',
//                'org.qi4j.api.mixin;version="['+version+',2)"',
//                'org.qi4j.api.property;version="['+version+',2)"',
//                'org.qi4j.api.service;version="['+version+',2)"',
//                'org.qi4j.api.unitofwork;version="['+version+',2)"',
//                'org.qi4j.api.value;version="['+version+',2)"'
  }
}

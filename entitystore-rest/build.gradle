
repositories {
   mavenRepo name: 'restlet-repo', urls: 'http://maven.restlet.org'
  mavenRepo name: 'aduna-repo', urls: "http://repo.aduna-software.org/maven2/releases/"
}

dependencies {
  compile(project(":org.qi4j.core:org.qi4j.core.api"))
  compile(project(":org.qi4j.core:org.qi4j.core.api"))
  compile(project(":org.qi4j.libraries:org.qi4j.library.rdf"))
  compile(project(':org.qi4j.extensions:org.qi4j.extension.indexing-rdf'))
  compile(libraries.slf4j_api)
  compile('org.openrdf.sesame:sesame-queryresultio-sparqlxml:' + rdfVersion)
  compile('org.openrdf.sesame:sesame-queryresultio-sparqljson:' + rdfVersion)
  compile('org.restlet.jee:org.restlet:' + restletVersion)
  compile('org.restlet.jee:org.restlet.ext.atom:' + restletVersion)
  compile('org.restlet.jee:org.restlet.ext.servlet:' + restletVersion)
  compile('org.restlet.jee:org.restlet.ext.xml:' + restletVersion)
  compile("javax.servlet:servlet-api:$servletVersion")
  testCompile(project(":org.qi4j.libraries:org.qi4j.library.http"))
  testCompile(project(":org.qi4j.core:org.qi4j.core.bootstrap"))
  testCompile(project(":org.qi4j.core:org.qi4j.core.testsupport"))
  testCompile(libraries.junit)
  testRuntime(project(":org.qi4j.core:org.qi4j.core.runtime"))
  testRuntime(libraries.asm)
  testRuntime(libraries.asm_commons)
  testRuntime(libraries.slf4j_simple)
}

jar {
  manifest {
    symbolicName = 'org.qi4j.entitystore.rest'
    description = "Qi4j ReST EntityStore Extension"
    name = "Qi4j Extension - EntityStore - ReST"
    instruction 'Export-Package', symbolicName +';version=' + version
    instruction 'Private-Package', symbolicName + '.internal'
    instruction 'Import-Package', '*'
  }
}
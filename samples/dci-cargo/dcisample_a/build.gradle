/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

description = "Sample of how DCI (Data, Context & Interaction) pattern is implemented with Qi4j, for Eric Evans DDD sample."

jar { manifest { name = "Qi4j Sample DCI Cargo - Sample A" }}

dependencies {

  compile(project(":org.qi4j.core:org.qi4j.core.bootstrap"))
  compile(project(":org.qi4j.libraries:org.qi4j.library.constraints"))
  compile(project(":org.qi4j.libraries:org.qi4j.library.conversion"))
  compile(project(":org.qi4j.libraries:org.qi4j.library.rdf"))
  compile project( ':org.qi4j.extensions:org.qi4j.extension.valueserialization-orgjson' )
  compile(project(":org.qi4j.extensions:org.qi4j.extension.indexing-rdf"))
  compile(project(":org.qi4j.tools:org.qi4j.tool.envisage"))
  compile(libraries.jetty_webapp)
  compile(libraries.wicket)
  compile(libraries.wicket_devutils)
  compile(libraries.wicket_stateless)
  compile libraries.slf4j_api

  runtime(project(":org.qi4j.core:org.qi4j.core.runtime"))

  testCompile(project(":org.qi4j.core:org.qi4j.core.testsupport"))
  testCompile(libraries.easymock)

  testRuntime(libraries.logback)

}

task(runSample, dependsOn: 'testClasses', type: JavaExec) {
    main = 'org.qi4j.sample.dcicargo.sample_a.bootstrap.Start8081'
    classpath = sourceSets.test.runtimeClasspath
}

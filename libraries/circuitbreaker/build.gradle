/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

description = "Qi4j Circuit Breaker Library provides a framework for connecting external resources, so that they can be disabled during re-play of events."

jar { manifest {name = "Qi4j Library - Circuit Breaker"}}

dependencies {
    compile project( ':org.qi4j.core:org.qi4j.core.api' )
    compile project( ':org.qi4j.libraries:org.qi4j.library.jmx' )
    compile libraries.slf4j_api

    testCompile project( ':org.qi4j.core:org.qi4j.core.testsupport' )
    testCompile libraries.awaitility

    testRuntime project( ':org.qi4j.core:org.qi4j.core.runtime' )
    testRuntime libraries.logback
}

task( runSample, dependsOn: 'testClasses', type: JavaExec ) {
    main = 'org.qi4j.library.circuitbreaker.jmx.CircuitBreakerManagementTest'
    classpath = sourceSets.test.runtimeClasspath
}

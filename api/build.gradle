
dependencies {
  compile(libraries.slf4j_api)
  testCompile(libraries.ant)
  testCompile(libraries.junit)
  testCompile(project(':org.qi4j.libraries:org.qi4j.library.constraints'))
  testCompile(project(':org.qi4j.core:org.qi4j.core.testsupport'))
  testRuntime(project(':org.qi4j.core:org.qi4j.core.runtime'))
  testRuntime(libraries.slf4j_simple)
  testRuntime(libraries.asm)
}

jar {
  manifest {
    name = "Qi4j Core API"
    instruction 'Export-Package',
            'org.qi4j.api;version=' + version,
            'org.qi4j.api.cache;version=' + version,
            'org.qi4j.api.common;version=' + version,
            'org.qi4j.api.composite;version=' + version,
            'org.qi4j.api.concern;version=' + version,
            'org.qi4j.api.concern.internal;version=' + version,
            'org.qi4j.api.configuration;version=' + version,
            'org.qi4j.api.constraint;version=' + version,
            'org.qi4j.api.entity;version=' + version,
            'org.qi4j.api.entity.association;version=' + version,
            'org.qi4j.api.injection;version=' + version,
            'org.qi4j.api.injection.scope;version=' + version,
            'org.qi4j.api.io;version=' + version,
            'org.qi4j.api.mixin;version=' + version,
            'org.qi4j.api.object;version=' + version,
            'org.qi4j.api.property;version=' + version,
            'org.qi4j.api.query;version=' + version,
            'org.qi4j.api.query.grammar;version=' + version,
            'org.qi4j.api.service;version=' + version,
            'org.qi4j.api.service.qualifier;version=' + version,
            'org.qi4j.api.sideeffect;version=' + version,
            'org.qi4j.api.sideeffect.internal;version=' + version,
            'org.qi4j.api.specification;version=' + version,
            'org.qi4j.api.structure;version=' + version,
            'org.qi4j.api.unitofwork;version=' + version,
            'org.qi4j.api.usecase;version=' + version,
            'org.qi4j.api.util;version=' + version,
            'org.qi4j.api.value;version=' + version

    instruction 'Import-Package',
            'org.qi4j.api;version="[' + version + ',2.0]"',
            'org.qi4j.api.cache;version="[' + version + ',2.0]"',
            'org.qi4j.api.common;version="[' + version + ',2.0]"',
            'org.qi4j.api.composite;version="[' + version + ',2.0]"',
            'org.qi4j.api.concern;version="[' + version + ',2.0]"',
            'org.qi4j.api.concern.internal;version="[' + version + ',2.0]"',
            'org.qi4j.api.configuration;version="[' + version + ',2.0]"',
            'org.qi4j.api.constraint;version="[' + version + ',2.0]"',
            'org.qi4j.api.entity;version="[' + version + ',2.0]"',
            'org.qi4j.api.entity.association;version="[' + version + ',2.0]"',
            'org.qi4j.api.injection;version="[' + version + ',2.0]"',
            'org.qi4j.api.injection.scope;version="[' + version + ',2.0]"',
            'org.qi4j.api.io;version="[' + version + ',2.0]"',
            'org.qi4j.api.mixin;version="[' + version + ',2.0]"',
            'org.qi4j.api.object;version="[' + version + ',2.0]"',
            'org.qi4j.api.property;version="' + version + ',2.0]"',
            'org.qi4j.api.query;version="[' + version + ',2.0]"',
            'org.qi4j.api.query.grammar;version="[' + version + ',2.0]"',
            'org.qi4j.api.service;version="[' + version + ',2.0]"',
            'org.qi4j.api.service.qualifier;version="[' + version + ',2.0]"',
            'org.qi4j.api.sideeffect;version="[' + version + ',2.0]"',
            'org.qi4j.api.sideeffect.internal;version="[' + version + ',2.0]"',
            'org.qi4j.api.specification;version="[' + version + ',2.0]"',
            'org.qi4j.api.structure;version="[' + version + ',2.0]"',
            'org.qi4j.api.unitofwork;version="[' + version + ',2.0]"',
            'org.qi4j.api.usecase;version="[' + version + ',2.0]"',
            'org.qi4j.api.util;version="[' + version + ',2.0]"',
            'org.qi4j.api.value;version="[' + version + ',2.0]"',
            'org.slf4j;version="[1.5,2)"'

  }
}
